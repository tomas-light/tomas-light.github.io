"use strict";(self.webpackChunk_solar_ti=self.webpackChunk_solar_ti||[]).push([["src_shared_api_fake_index_ts"],{5982:(t,e,a)=>{a.r(e),a.d(e,{fakeAuthApi:()=>g.m,fakeDictionaryApi:()=>y,fakeGroupApi:()=>u,fakePetApi:()=>f});var n=a(3968),i=a(3464),r=a.n(i),o=a(2986),s=a(8839);let c;async function d(){return c||(c=await async function(){return await async function(t){const{databaseName:e,databaseVersion:a,tableNames:n,initialTransactions:i}=t,r=await(0,s.P2)(e,a,{async upgrade(t,e,a,r){const o=e!=a;for(const e of n){if(t.objectStoreNames.contains(e)){if(!o)continue;t.deleteObjectStore(e)}t.createObjectStore(e)}await(i?.(function(t,e){return e.reduce(((e,a)=>(e[a]={getAll:()=>t.objectStore(a).getAll(),get:e=>t.objectStore(a).get(e),insert:(e,n)=>t.objectStore(a).add(n,e),update:(e,n)=>t.objectStore(a).put(n,e),delete:e=>t.objectStore(a).delete(e),deleteAll:()=>t.objectStore(a).clear()},e)),{})}(r,n)))}});return function(t,e){return e.reduce(((e,a)=>(e[a]={getAll:()=>t.getAll(a),get:e=>t.get(a,e),insert:(e,n)=>t.add(a,n,e),update:(e,n)=>t.put(a,n,e),delete:e=>t.delete(a,e),deleteAll:()=>t.clear(a)},e)),{})}(r,n)}({databaseName:"fe-rnd-mocks-database",databaseVersion:4,tableNames:(t={group:"",client:"",clientType:""},Array.from(Object.keys(t))),initialTransactions:async t=>{const{groups:e,saveGroups:a}=await async function(t){const{database:e}=t,a=Array.from({length:10}).map((()=>{const t=n.Jb.date.past().toISOString();return{id:n.Jb.string.uuid(),name:n.Jb.location.country(),description:n.Jb.location.countryCode(),created_at:t,updated_at:t,deleted_at:null}}));return{groups:a,saveGroups:()=>{a.forEach((t=>{e.group.insert(t.id,t)}))}}}({database:t}),{clientTypes:i,saveClientTypes:r}=await async function(t){const{database:e}=t,a=[];return a.push({id:0,name:"API",description:"Api client type"}),a.push({id:1,name:"Agent",description:"Agent client type"}),{clientTypes:a,saveClientTypes:()=>{a.forEach((t=>{e.clientType.insert(t.id,t)}))}}}({database:t}),{saveClients:o}=await async function(t){const{database:e,groups:a,clientTypes:i}=t,r=[];for(const t of a){const e=n.Jb.helpers.rangeToNumber({min:5,max:30});Array.from({length:e}).forEach((()=>{const e=n.Jb.date.past().toISOString(),a=n.Jb.helpers.rangeToNumber({min:0,max:i.length-1});r.push({id:n.Jb.string.uuid(),name:n.Jb.person.fullName(),description:n.Jb.person.jobDescriptor(),created_at:e,updated_at:e,deleted_at:null,type:i[a].id,hash:null,salt:null,group_id:t.id})}))}return{clients:r,saveClients:()=>{r.forEach((t=>{e.client.insert(t.id,t)}))}}}({database:t,groups:e,clientTypes:i});a(),r(),o()}});var t}()),c}const u={getGroups:async()=>{const t=await d(),e=await t.group.getAll(),a=await t.client.getAll(),n=e.map((t=>({id:t.id,name:t.name,description:t.description,created_at:r()(t.created_at).toDate().getMilliseconds(),updated_at:r()(t.updated_at).toDate().getMilliseconds(),client_count:a.filter((e=>e.group_id===t.id)).length})));return o.fU.ok({count:n.length,objects:n})},getGroup:async t=>{const e=await d(),a=await e.group.get(t);if(!a)return o.fU.notFound();const n={id:a.id,name:a.name,description:a.description};return o.fU.ok(n)},createGroup:async t=>{const e=(new Date).toISOString(),a={id:n.Jb.string.uuid(),name:t.name,description:t.description,created_at:e,updated_at:e,deleted_at:null},i=await d();return await i.group.insert(a.id,a),o.fU.ok()},updateGroup:async(t,e)=>{const a=await d(),n=await a.group.get(t);if(!n)return o.fU.notFound();const i=(new Date).toISOString(),r={id:n.id,name:e.name??"",description:e.description??"",created_at:n.created_at,updated_at:i,deleted_at:n.deleted_at};return await a.group.update(t,r),o.fU.ok()},deleteGroup:async t=>{const e=await d();return await e.group.delete(t),o.fU.ok()},async linkedClients(t){const e=await d(),a=await e.client.getAll(),n=await l(),i=a.filter((e=>e.group_id==t)).map((t=>{const e=n.get(t.type);if(!e)throw new Error(`Type id ${t.type} not found in database`);return{id:t.id,name:t.name,description:t.description,type:e.name,created_at:r()(t.created_at).valueOf(),updated_at:r()(t.updated_at).valueOf()}}));return o.fU.ok({count:i.length,objects:i})},async getClientGroup(t,e){const a=await d(),n=await a.client.get(e);if(!n)return o.fU.notFound();const i=(await l()).get(n.type);if(!i)throw new Error(`Type id ${n.type} not found in database`);const r={id:n.id,name:n.name,description:n.description,type:i.name};return o.fU.ok(r)},createClientGroup:async(t,e)=>{const a=(new Date).toISOString(),i={id:n.Jb.string.uuid(),name:e.name,description:e.description,group_id:t,created_at:a,updated_at:a,type:e.type,deleted_at:null,salt:null,hash:null},r=await d();return await r.client.insert(i.id,i),o.fU.ok()},async updateClientGroup(t,e,a){const n=await d(),i=await n.client.get(e);if(!i)return o.fU.notFound();const r=(new Date).toISOString(),s={...i,name:a.name??"",description:a.description??"",updated_at:r};return await n.client.update(e,s),o.fU.ok()},async deleteClientGroup(t,e){const a=await d();return await a.client.delete(e),o.fU.ok()}};async function l(){const t=await d(),e=await t.clientType.getAll(),a=new Map;return e.forEach((t=>{a.set(t.id,t)})),a}const p=[{id:1,name:"fake John",photoUrls:[]},{id:2,name:"fake Ivan",photoUrls:[]}],f={findPetsByStatus:async()=>o.fU.ok(p)};var g=a(520);const y={dictionaryTypes:async()=>{const t=await d(),e=(await t.clientType.getAll()).map((t=>({id:t.id,name:t.name,description:t.description})));return o.fU.ok({count:e.length,objects:e})}}}}]);